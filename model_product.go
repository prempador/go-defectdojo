/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.30.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Product type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Product{}

// Product struct for Product
type Product struct {
	Id int32 `json:"id"`
	FindingsCount int32 `json:"findings_count"`
	FindingsList []int32 `json:"findings_list"`
	Tags []string `json:"tags,omitempty"`
	ProductMeta []ProductMeta `json:"product_meta"`
	Name string `json:"name"`
	Description string `json:"description"`
	Created NullableTime `json:"created"`
	ProdNumericGrade NullableInt32 `json:"prod_numeric_grade,omitempty"`
	// * `very high` - Very High * `high` - High * `medium` - Medium * `low` - Low * `very low` - Very Low * `none` - None
	BusinessCriticality NullableString `json:"business_criticality,omitempty"`
	// * `web service` - API * `desktop` - Desktop * `iot` - Internet of Things * `mobile` - Mobile * `web` - Web
	Platform NullableString `json:"platform,omitempty"`
	// * `construction` - Construction * `production` - Production * `retirement` - Retirement
	Lifecycle NullableString `json:"lifecycle,omitempty"`
	// * `third party library` - Third Party Library * `purchased` - Purchased * `contractor` - Contractor Developed * `internal` - Internally Developed * `open source` - Open Source * `outsourced` - Outsourced
	Origin NullableString `json:"origin,omitempty"`
	// Estimate the number of user records within the application.
	UserRecords NullableInt32 `json:"user_records,omitempty"`
	// Estimate the application's revenue.
	Revenue NullableFloat64 `json:"revenue,omitempty"`
	// Specify if the application is used by people outside the organization.
	ExternalAudience *bool `json:"external_audience,omitempty"`
	// Specify if the application is accessible from the public internet.
	InternetAccessible *bool `json:"internet_accessible,omitempty"`
	// Enables product tag inheritance. Any tags added on a product will automatically be added to all Engagements, Tests, and Findings
	EnableProductTagInheritance *bool `json:"enable_product_tag_inheritance,omitempty"`
	// Allows simple risk acceptance by checking/unchecking a checkbox.
	EnableSimpleRiskAcceptance *bool `json:"enable_simple_risk_acceptance,omitempty"`
	// Allows full risk acceptance using a risk acceptance form, expiration date, uploaded proof, etc.
	EnableFullRiskAcceptance *bool `json:"enable_full_risk_acceptance,omitempty"`
	// Disable SLA breach notifications if configured in the global settings
	DisableSlaBreachNotifications *bool `json:"disable_sla_breach_notifications,omitempty"`
	ProductManager NullableInt32 `json:"product_manager,omitempty"`
	TechnicalContact NullableInt32 `json:"technical_contact,omitempty"`
	TeamManager NullableInt32 `json:"team_manager,omitempty"`
	ProdType int32 `json:"prod_type"`
	SlaConfiguration *int32 `json:"sla_configuration,omitempty"`
	Members []int32 `json:"members"`
	AuthorizationGroups []int32 `json:"authorization_groups"`
	Regulations []int32 `json:"regulations,omitempty"`
	Prefetch *PaginatedProductListPrefetch `json:"prefetch,omitempty"`
}

type _Product Product

// NewProduct instantiates a new Product object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct(id int32, findingsCount int32, findingsList []int32, productMeta []ProductMeta, name string, description string, created NullableTime, prodType int32, members []int32, authorizationGroups []int32) *Product {
	this := Product{}
	this.Id = id
	this.FindingsCount = findingsCount
	this.FindingsList = findingsList
	this.ProductMeta = productMeta
	this.Name = name
	this.Description = description
	this.Created = created
	this.ProdType = prodType
	this.Members = members
	this.AuthorizationGroups = authorizationGroups
	return &this
}

// NewProductWithDefaults instantiates a new Product object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductWithDefaults() *Product {
	this := Product{}
	return &this
}

// GetId returns the Id field value
func (o *Product) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Product) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Product) SetId(v int32) {
	o.Id = v
}

// GetFindingsCount returns the FindingsCount field value
func (o *Product) GetFindingsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FindingsCount
}

// GetFindingsCountOk returns a tuple with the FindingsCount field value
// and a boolean to check if the value has been set.
func (o *Product) GetFindingsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FindingsCount, true
}

// SetFindingsCount sets field value
func (o *Product) SetFindingsCount(v int32) {
	o.FindingsCount = v
}

// GetFindingsList returns the FindingsList field value
func (o *Product) GetFindingsList() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.FindingsList
}

// GetFindingsListOk returns a tuple with the FindingsList field value
// and a boolean to check if the value has been set.
func (o *Product) GetFindingsListOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FindingsList, true
}

// SetFindingsList sets field value
func (o *Product) SetFindingsList(v []int32) {
	o.FindingsList = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Product) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Product) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Product) SetTags(v []string) {
	o.Tags = v
}

// GetProductMeta returns the ProductMeta field value
func (o *Product) GetProductMeta() []ProductMeta {
	if o == nil {
		var ret []ProductMeta
		return ret
	}

	return o.ProductMeta
}

// GetProductMetaOk returns a tuple with the ProductMeta field value
// and a boolean to check if the value has been set.
func (o *Product) GetProductMetaOk() ([]ProductMeta, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductMeta, true
}

// SetProductMeta sets field value
func (o *Product) SetProductMeta(v []ProductMeta) {
	o.ProductMeta = v
}

// GetName returns the Name field value
func (o *Product) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Product) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Product) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Product) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Product) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Product) SetDescription(v string) {
	o.Description = v
}

// GetCreated returns the Created field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Product) GetCreated() time.Time {
	if o == nil || o.Created.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// SetCreated sets field value
func (o *Product) SetCreated(v time.Time) {
	o.Created.Set(&v)
}

// GetProdNumericGrade returns the ProdNumericGrade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetProdNumericGrade() int32 {
	if o == nil || IsNil(o.ProdNumericGrade.Get()) {
		var ret int32
		return ret
	}
	return *o.ProdNumericGrade.Get()
}

// GetProdNumericGradeOk returns a tuple with the ProdNumericGrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetProdNumericGradeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProdNumericGrade.Get(), o.ProdNumericGrade.IsSet()
}

// HasProdNumericGrade returns a boolean if a field has been set.
func (o *Product) HasProdNumericGrade() bool {
	if o != nil && o.ProdNumericGrade.IsSet() {
		return true
	}

	return false
}

// SetProdNumericGrade gets a reference to the given NullableInt32 and assigns it to the ProdNumericGrade field.
func (o *Product) SetProdNumericGrade(v int32) {
	o.ProdNumericGrade.Set(&v)
}
// SetProdNumericGradeNil sets the value for ProdNumericGrade to be an explicit nil
func (o *Product) SetProdNumericGradeNil() {
	o.ProdNumericGrade.Set(nil)
}

// UnsetProdNumericGrade ensures that no value is present for ProdNumericGrade, not even an explicit nil
func (o *Product) UnsetProdNumericGrade() {
	o.ProdNumericGrade.Unset()
}

// GetBusinessCriticality returns the BusinessCriticality field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetBusinessCriticality() string {
	if o == nil || IsNil(o.BusinessCriticality.Get()) {
		var ret string
		return ret
	}
	return *o.BusinessCriticality.Get()
}

// GetBusinessCriticalityOk returns a tuple with the BusinessCriticality field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetBusinessCriticalityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessCriticality.Get(), o.BusinessCriticality.IsSet()
}

// HasBusinessCriticality returns a boolean if a field has been set.
func (o *Product) HasBusinessCriticality() bool {
	if o != nil && o.BusinessCriticality.IsSet() {
		return true
	}

	return false
}

// SetBusinessCriticality gets a reference to the given NullableString and assigns it to the BusinessCriticality field.
func (o *Product) SetBusinessCriticality(v string) {
	o.BusinessCriticality.Set(&v)
}
// SetBusinessCriticalityNil sets the value for BusinessCriticality to be an explicit nil
func (o *Product) SetBusinessCriticalityNil() {
	o.BusinessCriticality.Set(nil)
}

// UnsetBusinessCriticality ensures that no value is present for BusinessCriticality, not even an explicit nil
func (o *Product) UnsetBusinessCriticality() {
	o.BusinessCriticality.Unset()
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetPlatform() string {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret string
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *Product) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullableString and assigns it to the Platform field.
func (o *Product) SetPlatform(v string) {
	o.Platform.Set(&v)
}
// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *Product) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *Product) UnsetPlatform() {
	o.Platform.Unset()
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetLifecycle() string {
	if o == nil || IsNil(o.Lifecycle.Get()) {
		var ret string
		return ret
	}
	return *o.Lifecycle.Get()
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetLifecycleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lifecycle.Get(), o.Lifecycle.IsSet()
}

// HasLifecycle returns a boolean if a field has been set.
func (o *Product) HasLifecycle() bool {
	if o != nil && o.Lifecycle.IsSet() {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given NullableString and assigns it to the Lifecycle field.
func (o *Product) SetLifecycle(v string) {
	o.Lifecycle.Set(&v)
}
// SetLifecycleNil sets the value for Lifecycle to be an explicit nil
func (o *Product) SetLifecycleNil() {
	o.Lifecycle.Set(nil)
}

// UnsetLifecycle ensures that no value is present for Lifecycle, not even an explicit nil
func (o *Product) UnsetLifecycle() {
	o.Lifecycle.Unset()
}

// GetOrigin returns the Origin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetOrigin() string {
	if o == nil || IsNil(o.Origin.Get()) {
		var ret string
		return ret
	}
	return *o.Origin.Get()
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Origin.Get(), o.Origin.IsSet()
}

// HasOrigin returns a boolean if a field has been set.
func (o *Product) HasOrigin() bool {
	if o != nil && o.Origin.IsSet() {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given NullableString and assigns it to the Origin field.
func (o *Product) SetOrigin(v string) {
	o.Origin.Set(&v)
}
// SetOriginNil sets the value for Origin to be an explicit nil
func (o *Product) SetOriginNil() {
	o.Origin.Set(nil)
}

// UnsetOrigin ensures that no value is present for Origin, not even an explicit nil
func (o *Product) UnsetOrigin() {
	o.Origin.Unset()
}

// GetUserRecords returns the UserRecords field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetUserRecords() int32 {
	if o == nil || IsNil(o.UserRecords.Get()) {
		var ret int32
		return ret
	}
	return *o.UserRecords.Get()
}

// GetUserRecordsOk returns a tuple with the UserRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetUserRecordsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserRecords.Get(), o.UserRecords.IsSet()
}

// HasUserRecords returns a boolean if a field has been set.
func (o *Product) HasUserRecords() bool {
	if o != nil && o.UserRecords.IsSet() {
		return true
	}

	return false
}

// SetUserRecords gets a reference to the given NullableInt32 and assigns it to the UserRecords field.
func (o *Product) SetUserRecords(v int32) {
	o.UserRecords.Set(&v)
}
// SetUserRecordsNil sets the value for UserRecords to be an explicit nil
func (o *Product) SetUserRecordsNil() {
	o.UserRecords.Set(nil)
}

// UnsetUserRecords ensures that no value is present for UserRecords, not even an explicit nil
func (o *Product) UnsetUserRecords() {
	o.UserRecords.Unset()
}

// GetRevenue returns the Revenue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetRevenue() float64 {
	if o == nil || IsNil(o.Revenue.Get()) {
		var ret float64
		return ret
	}
	return *o.Revenue.Get()
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetRevenueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revenue.Get(), o.Revenue.IsSet()
}

// HasRevenue returns a boolean if a field has been set.
func (o *Product) HasRevenue() bool {
	if o != nil && o.Revenue.IsSet() {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given NullableFloat64 and assigns it to the Revenue field.
func (o *Product) SetRevenue(v float64) {
	o.Revenue.Set(&v)
}
// SetRevenueNil sets the value for Revenue to be an explicit nil
func (o *Product) SetRevenueNil() {
	o.Revenue.Set(nil)
}

// UnsetRevenue ensures that no value is present for Revenue, not even an explicit nil
func (o *Product) UnsetRevenue() {
	o.Revenue.Unset()
}

// GetExternalAudience returns the ExternalAudience field value if set, zero value otherwise.
func (o *Product) GetExternalAudience() bool {
	if o == nil || IsNil(o.ExternalAudience) {
		var ret bool
		return ret
	}
	return *o.ExternalAudience
}

// GetExternalAudienceOk returns a tuple with the ExternalAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetExternalAudienceOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAudience) {
		return nil, false
	}
	return o.ExternalAudience, true
}

// HasExternalAudience returns a boolean if a field has been set.
func (o *Product) HasExternalAudience() bool {
	if o != nil && !IsNil(o.ExternalAudience) {
		return true
	}

	return false
}

// SetExternalAudience gets a reference to the given bool and assigns it to the ExternalAudience field.
func (o *Product) SetExternalAudience(v bool) {
	o.ExternalAudience = &v
}

// GetInternetAccessible returns the InternetAccessible field value if set, zero value otherwise.
func (o *Product) GetInternetAccessible() bool {
	if o == nil || IsNil(o.InternetAccessible) {
		var ret bool
		return ret
	}
	return *o.InternetAccessible
}

// GetInternetAccessibleOk returns a tuple with the InternetAccessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetInternetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.InternetAccessible) {
		return nil, false
	}
	return o.InternetAccessible, true
}

// HasInternetAccessible returns a boolean if a field has been set.
func (o *Product) HasInternetAccessible() bool {
	if o != nil && !IsNil(o.InternetAccessible) {
		return true
	}

	return false
}

// SetInternetAccessible gets a reference to the given bool and assigns it to the InternetAccessible field.
func (o *Product) SetInternetAccessible(v bool) {
	o.InternetAccessible = &v
}

// GetEnableProductTagInheritance returns the EnableProductTagInheritance field value if set, zero value otherwise.
func (o *Product) GetEnableProductTagInheritance() bool {
	if o == nil || IsNil(o.EnableProductTagInheritance) {
		var ret bool
		return ret
	}
	return *o.EnableProductTagInheritance
}

// GetEnableProductTagInheritanceOk returns a tuple with the EnableProductTagInheritance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetEnableProductTagInheritanceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableProductTagInheritance) {
		return nil, false
	}
	return o.EnableProductTagInheritance, true
}

// HasEnableProductTagInheritance returns a boolean if a field has been set.
func (o *Product) HasEnableProductTagInheritance() bool {
	if o != nil && !IsNil(o.EnableProductTagInheritance) {
		return true
	}

	return false
}

// SetEnableProductTagInheritance gets a reference to the given bool and assigns it to the EnableProductTagInheritance field.
func (o *Product) SetEnableProductTagInheritance(v bool) {
	o.EnableProductTagInheritance = &v
}

// GetEnableSimpleRiskAcceptance returns the EnableSimpleRiskAcceptance field value if set, zero value otherwise.
func (o *Product) GetEnableSimpleRiskAcceptance() bool {
	if o == nil || IsNil(o.EnableSimpleRiskAcceptance) {
		var ret bool
		return ret
	}
	return *o.EnableSimpleRiskAcceptance
}

// GetEnableSimpleRiskAcceptanceOk returns a tuple with the EnableSimpleRiskAcceptance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetEnableSimpleRiskAcceptanceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSimpleRiskAcceptance) {
		return nil, false
	}
	return o.EnableSimpleRiskAcceptance, true
}

// HasEnableSimpleRiskAcceptance returns a boolean if a field has been set.
func (o *Product) HasEnableSimpleRiskAcceptance() bool {
	if o != nil && !IsNil(o.EnableSimpleRiskAcceptance) {
		return true
	}

	return false
}

// SetEnableSimpleRiskAcceptance gets a reference to the given bool and assigns it to the EnableSimpleRiskAcceptance field.
func (o *Product) SetEnableSimpleRiskAcceptance(v bool) {
	o.EnableSimpleRiskAcceptance = &v
}

// GetEnableFullRiskAcceptance returns the EnableFullRiskAcceptance field value if set, zero value otherwise.
func (o *Product) GetEnableFullRiskAcceptance() bool {
	if o == nil || IsNil(o.EnableFullRiskAcceptance) {
		var ret bool
		return ret
	}
	return *o.EnableFullRiskAcceptance
}

// GetEnableFullRiskAcceptanceOk returns a tuple with the EnableFullRiskAcceptance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetEnableFullRiskAcceptanceOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFullRiskAcceptance) {
		return nil, false
	}
	return o.EnableFullRiskAcceptance, true
}

// HasEnableFullRiskAcceptance returns a boolean if a field has been set.
func (o *Product) HasEnableFullRiskAcceptance() bool {
	if o != nil && !IsNil(o.EnableFullRiskAcceptance) {
		return true
	}

	return false
}

// SetEnableFullRiskAcceptance gets a reference to the given bool and assigns it to the EnableFullRiskAcceptance field.
func (o *Product) SetEnableFullRiskAcceptance(v bool) {
	o.EnableFullRiskAcceptance = &v
}

// GetDisableSlaBreachNotifications returns the DisableSlaBreachNotifications field value if set, zero value otherwise.
func (o *Product) GetDisableSlaBreachNotifications() bool {
	if o == nil || IsNil(o.DisableSlaBreachNotifications) {
		var ret bool
		return ret
	}
	return *o.DisableSlaBreachNotifications
}

// GetDisableSlaBreachNotificationsOk returns a tuple with the DisableSlaBreachNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetDisableSlaBreachNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSlaBreachNotifications) {
		return nil, false
	}
	return o.DisableSlaBreachNotifications, true
}

// HasDisableSlaBreachNotifications returns a boolean if a field has been set.
func (o *Product) HasDisableSlaBreachNotifications() bool {
	if o != nil && !IsNil(o.DisableSlaBreachNotifications) {
		return true
	}

	return false
}

// SetDisableSlaBreachNotifications gets a reference to the given bool and assigns it to the DisableSlaBreachNotifications field.
func (o *Product) SetDisableSlaBreachNotifications(v bool) {
	o.DisableSlaBreachNotifications = &v
}

// GetProductManager returns the ProductManager field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetProductManager() int32 {
	if o == nil || IsNil(o.ProductManager.Get()) {
		var ret int32
		return ret
	}
	return *o.ProductManager.Get()
}

// GetProductManagerOk returns a tuple with the ProductManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetProductManagerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductManager.Get(), o.ProductManager.IsSet()
}

// HasProductManager returns a boolean if a field has been set.
func (o *Product) HasProductManager() bool {
	if o != nil && o.ProductManager.IsSet() {
		return true
	}

	return false
}

// SetProductManager gets a reference to the given NullableInt32 and assigns it to the ProductManager field.
func (o *Product) SetProductManager(v int32) {
	o.ProductManager.Set(&v)
}
// SetProductManagerNil sets the value for ProductManager to be an explicit nil
func (o *Product) SetProductManagerNil() {
	o.ProductManager.Set(nil)
}

// UnsetProductManager ensures that no value is present for ProductManager, not even an explicit nil
func (o *Product) UnsetProductManager() {
	o.ProductManager.Unset()
}

// GetTechnicalContact returns the TechnicalContact field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetTechnicalContact() int32 {
	if o == nil || IsNil(o.TechnicalContact.Get()) {
		var ret int32
		return ret
	}
	return *o.TechnicalContact.Get()
}

// GetTechnicalContactOk returns a tuple with the TechnicalContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetTechnicalContactOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TechnicalContact.Get(), o.TechnicalContact.IsSet()
}

// HasTechnicalContact returns a boolean if a field has been set.
func (o *Product) HasTechnicalContact() bool {
	if o != nil && o.TechnicalContact.IsSet() {
		return true
	}

	return false
}

// SetTechnicalContact gets a reference to the given NullableInt32 and assigns it to the TechnicalContact field.
func (o *Product) SetTechnicalContact(v int32) {
	o.TechnicalContact.Set(&v)
}
// SetTechnicalContactNil sets the value for TechnicalContact to be an explicit nil
func (o *Product) SetTechnicalContactNil() {
	o.TechnicalContact.Set(nil)
}

// UnsetTechnicalContact ensures that no value is present for TechnicalContact, not even an explicit nil
func (o *Product) UnsetTechnicalContact() {
	o.TechnicalContact.Unset()
}

// GetTeamManager returns the TeamManager field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Product) GetTeamManager() int32 {
	if o == nil || IsNil(o.TeamManager.Get()) {
		var ret int32
		return ret
	}
	return *o.TeamManager.Get()
}

// GetTeamManagerOk returns a tuple with the TeamManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Product) GetTeamManagerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TeamManager.Get(), o.TeamManager.IsSet()
}

// HasTeamManager returns a boolean if a field has been set.
func (o *Product) HasTeamManager() bool {
	if o != nil && o.TeamManager.IsSet() {
		return true
	}

	return false
}

// SetTeamManager gets a reference to the given NullableInt32 and assigns it to the TeamManager field.
func (o *Product) SetTeamManager(v int32) {
	o.TeamManager.Set(&v)
}
// SetTeamManagerNil sets the value for TeamManager to be an explicit nil
func (o *Product) SetTeamManagerNil() {
	o.TeamManager.Set(nil)
}

// UnsetTeamManager ensures that no value is present for TeamManager, not even an explicit nil
func (o *Product) UnsetTeamManager() {
	o.TeamManager.Unset()
}

// GetProdType returns the ProdType field value
func (o *Product) GetProdType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProdType
}

// GetProdTypeOk returns a tuple with the ProdType field value
// and a boolean to check if the value has been set.
func (o *Product) GetProdTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProdType, true
}

// SetProdType sets field value
func (o *Product) SetProdType(v int32) {
	o.ProdType = v
}

// GetSlaConfiguration returns the SlaConfiguration field value if set, zero value otherwise.
func (o *Product) GetSlaConfiguration() int32 {
	if o == nil || IsNil(o.SlaConfiguration) {
		var ret int32
		return ret
	}
	return *o.SlaConfiguration
}

// GetSlaConfigurationOk returns a tuple with the SlaConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetSlaConfigurationOk() (*int32, bool) {
	if o == nil || IsNil(o.SlaConfiguration) {
		return nil, false
	}
	return o.SlaConfiguration, true
}

// HasSlaConfiguration returns a boolean if a field has been set.
func (o *Product) HasSlaConfiguration() bool {
	if o != nil && !IsNil(o.SlaConfiguration) {
		return true
	}

	return false
}

// SetSlaConfiguration gets a reference to the given int32 and assigns it to the SlaConfiguration field.
func (o *Product) SetSlaConfiguration(v int32) {
	o.SlaConfiguration = &v
}

// GetMembers returns the Members field value
func (o *Product) GetMembers() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *Product) GetMembersOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *Product) SetMembers(v []int32) {
	o.Members = v
}

// GetAuthorizationGroups returns the AuthorizationGroups field value
func (o *Product) GetAuthorizationGroups() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.AuthorizationGroups
}

// GetAuthorizationGroupsOk returns a tuple with the AuthorizationGroups field value
// and a boolean to check if the value has been set.
func (o *Product) GetAuthorizationGroupsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorizationGroups, true
}

// SetAuthorizationGroups sets field value
func (o *Product) SetAuthorizationGroups(v []int32) {
	o.AuthorizationGroups = v
}

// GetRegulations returns the Regulations field value if set, zero value otherwise.
func (o *Product) GetRegulations() []int32 {
	if o == nil || IsNil(o.Regulations) {
		var ret []int32
		return ret
	}
	return o.Regulations
}

// GetRegulationsOk returns a tuple with the Regulations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetRegulationsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Regulations) {
		return nil, false
	}
	return o.Regulations, true
}

// HasRegulations returns a boolean if a field has been set.
func (o *Product) HasRegulations() bool {
	if o != nil && !IsNil(o.Regulations) {
		return true
	}

	return false
}

// SetRegulations gets a reference to the given []int32 and assigns it to the Regulations field.
func (o *Product) SetRegulations(v []int32) {
	o.Regulations = v
}

// GetPrefetch returns the Prefetch field value if set, zero value otherwise.
func (o *Product) GetPrefetch() PaginatedProductListPrefetch {
	if o == nil || IsNil(o.Prefetch) {
		var ret PaginatedProductListPrefetch
		return ret
	}
	return *o.Prefetch
}

// GetPrefetchOk returns a tuple with the Prefetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product) GetPrefetchOk() (*PaginatedProductListPrefetch, bool) {
	if o == nil || IsNil(o.Prefetch) {
		return nil, false
	}
	return o.Prefetch, true
}

// HasPrefetch returns a boolean if a field has been set.
func (o *Product) HasPrefetch() bool {
	if o != nil && !IsNil(o.Prefetch) {
		return true
	}

	return false
}

// SetPrefetch gets a reference to the given PaginatedProductListPrefetch and assigns it to the Prefetch field.
func (o *Product) SetPrefetch(v PaginatedProductListPrefetch) {
	o.Prefetch = &v
}

func (o Product) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Product) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["findings_count"] = o.FindingsCount
	toSerialize["findings_list"] = o.FindingsList
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["product_meta"] = o.ProductMeta
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["created"] = o.Created.Get()
	if o.ProdNumericGrade.IsSet() {
		toSerialize["prod_numeric_grade"] = o.ProdNumericGrade.Get()
	}
	if o.BusinessCriticality.IsSet() {
		toSerialize["business_criticality"] = o.BusinessCriticality.Get()
	}
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if o.Lifecycle.IsSet() {
		toSerialize["lifecycle"] = o.Lifecycle.Get()
	}
	if o.Origin.IsSet() {
		toSerialize["origin"] = o.Origin.Get()
	}
	if o.UserRecords.IsSet() {
		toSerialize["user_records"] = o.UserRecords.Get()
	}
	if o.Revenue.IsSet() {
		toSerialize["revenue"] = o.Revenue.Get()
	}
	if !IsNil(o.ExternalAudience) {
		toSerialize["external_audience"] = o.ExternalAudience
	}
	if !IsNil(o.InternetAccessible) {
		toSerialize["internet_accessible"] = o.InternetAccessible
	}
	if !IsNil(o.EnableProductTagInheritance) {
		toSerialize["enable_product_tag_inheritance"] = o.EnableProductTagInheritance
	}
	if !IsNil(o.EnableSimpleRiskAcceptance) {
		toSerialize["enable_simple_risk_acceptance"] = o.EnableSimpleRiskAcceptance
	}
	if !IsNil(o.EnableFullRiskAcceptance) {
		toSerialize["enable_full_risk_acceptance"] = o.EnableFullRiskAcceptance
	}
	if !IsNil(o.DisableSlaBreachNotifications) {
		toSerialize["disable_sla_breach_notifications"] = o.DisableSlaBreachNotifications
	}
	if o.ProductManager.IsSet() {
		toSerialize["product_manager"] = o.ProductManager.Get()
	}
	if o.TechnicalContact.IsSet() {
		toSerialize["technical_contact"] = o.TechnicalContact.Get()
	}
	if o.TeamManager.IsSet() {
		toSerialize["team_manager"] = o.TeamManager.Get()
	}
	toSerialize["prod_type"] = o.ProdType
	if !IsNil(o.SlaConfiguration) {
		toSerialize["sla_configuration"] = o.SlaConfiguration
	}
	toSerialize["members"] = o.Members
	toSerialize["authorization_groups"] = o.AuthorizationGroups
	if !IsNil(o.Regulations) {
		toSerialize["regulations"] = o.Regulations
	}
	if !IsNil(o.Prefetch) {
		toSerialize["prefetch"] = o.Prefetch
	}
	return toSerialize, nil
}

func (o *Product) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"findings_count",
		"findings_list",
		"product_meta",
		"name",
		"description",
		"created",
		"prod_type",
		"members",
		"authorization_groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProduct := _Product{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProduct)

	if err != nil {
		return err
	}

	*o = Product(varProduct)

	return err
}

type NullableProduct struct {
	value *Product
	isSet bool
}

func (v NullableProduct) Get() *Product {
	return v.value
}

func (v *NullableProduct) Set(val *Product) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct(val *Product) *NullableProduct {
	return &NullableProduct{value: val, isSet: true}
}

func (v NullableProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


