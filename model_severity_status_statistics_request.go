/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.33.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SeverityStatusStatisticsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeverityStatusStatisticsRequest{}

// SeverityStatusStatisticsRequest struct for SeverityStatusStatisticsRequest
type SeverityStatusStatisticsRequest struct {
	Info StatusStatisticsRequest `json:"info"`
	Low StatusStatisticsRequest `json:"low"`
	Medium StatusStatisticsRequest `json:"medium"`
	High StatusStatisticsRequest `json:"high"`
	Critical StatusStatisticsRequest `json:"critical"`
	Total StatusStatisticsRequest `json:"total"`
}

type _SeverityStatusStatisticsRequest SeverityStatusStatisticsRequest

// NewSeverityStatusStatisticsRequest instantiates a new SeverityStatusStatisticsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeverityStatusStatisticsRequest(info StatusStatisticsRequest, low StatusStatisticsRequest, medium StatusStatisticsRequest, high StatusStatisticsRequest, critical StatusStatisticsRequest, total StatusStatisticsRequest) *SeverityStatusStatisticsRequest {
	this := SeverityStatusStatisticsRequest{}
	this.Info = info
	this.Low = low
	this.Medium = medium
	this.High = high
	this.Critical = critical
	this.Total = total
	return &this
}

// NewSeverityStatusStatisticsRequestWithDefaults instantiates a new SeverityStatusStatisticsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeverityStatusStatisticsRequestWithDefaults() *SeverityStatusStatisticsRequest {
	this := SeverityStatusStatisticsRequest{}
	return &this
}

// GetInfo returns the Info field value
func (o *SeverityStatusStatisticsRequest) GetInfo() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetInfoOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Info, true
}

// SetInfo sets field value
func (o *SeverityStatusStatisticsRequest) SetInfo(v StatusStatisticsRequest) {
	o.Info = v
}

// GetLow returns the Low field value
func (o *SeverityStatusStatisticsRequest) GetLow() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.Low
}

// GetLowOk returns a tuple with the Low field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetLowOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Low, true
}

// SetLow sets field value
func (o *SeverityStatusStatisticsRequest) SetLow(v StatusStatisticsRequest) {
	o.Low = v
}

// GetMedium returns the Medium field value
func (o *SeverityStatusStatisticsRequest) GetMedium() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.Medium
}

// GetMediumOk returns a tuple with the Medium field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetMediumOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Medium, true
}

// SetMedium sets field value
func (o *SeverityStatusStatisticsRequest) SetMedium(v StatusStatisticsRequest) {
	o.Medium = v
}

// GetHigh returns the High field value
func (o *SeverityStatusStatisticsRequest) GetHigh() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.High
}

// GetHighOk returns a tuple with the High field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetHighOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.High, true
}

// SetHigh sets field value
func (o *SeverityStatusStatisticsRequest) SetHigh(v StatusStatisticsRequest) {
	o.High = v
}

// GetCritical returns the Critical field value
func (o *SeverityStatusStatisticsRequest) GetCritical() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetCriticalOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Critical, true
}

// SetCritical sets field value
func (o *SeverityStatusStatisticsRequest) SetCritical(v StatusStatisticsRequest) {
	o.Critical = v
}

// GetTotal returns the Total field value
func (o *SeverityStatusStatisticsRequest) GetTotal() StatusStatisticsRequest {
	if o == nil {
		var ret StatusStatisticsRequest
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *SeverityStatusStatisticsRequest) GetTotalOk() (*StatusStatisticsRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *SeverityStatusStatisticsRequest) SetTotal(v StatusStatisticsRequest) {
	o.Total = v
}

func (o SeverityStatusStatisticsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeverityStatusStatisticsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["info"] = o.Info
	toSerialize["low"] = o.Low
	toSerialize["medium"] = o.Medium
	toSerialize["high"] = o.High
	toSerialize["critical"] = o.Critical
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *SeverityStatusStatisticsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"info",
		"low",
		"medium",
		"high",
		"critical",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSeverityStatusStatisticsRequest := _SeverityStatusStatisticsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSeverityStatusStatisticsRequest)

	if err != nil {
		return err
	}

	*o = SeverityStatusStatisticsRequest(varSeverityStatusStatisticsRequest)

	return err
}

type NullableSeverityStatusStatisticsRequest struct {
	value *SeverityStatusStatisticsRequest
	isSet bool
}

func (v NullableSeverityStatusStatisticsRequest) Get() *SeverityStatusStatisticsRequest {
	return v.value
}

func (v *NullableSeverityStatusStatisticsRequest) Set(val *SeverityStatusStatisticsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSeverityStatusStatisticsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSeverityStatusStatisticsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeverityStatusStatisticsRequest(val *SeverityStatusStatisticsRequest) *NullableSeverityStatusStatisticsRequest {
	return &NullableSeverityStatusStatisticsRequest{value: val, isSet: true}
}

func (v NullableSeverityStatusStatisticsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeverityStatusStatisticsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


