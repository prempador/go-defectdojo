/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.33.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndpointStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointStatusRequest{}

// EndpointStatusRequest struct for EndpointStatusRequest
type EndpointStatusRequest struct {
	Date *string `json:"date,omitempty"`
	Mitigated *bool `json:"mitigated,omitempty"`
	FalsePositive *bool `json:"false_positive,omitempty"`
	OutOfScope *bool `json:"out_of_scope,omitempty"`
	RiskAccepted *bool `json:"risk_accepted,omitempty"`
	MitigatedBy NullableInt32 `json:"mitigated_by,omitempty"`
	Endpoint int32 `json:"endpoint"`
	Finding int32 `json:"finding"`
}

type _EndpointStatusRequest EndpointStatusRequest

// NewEndpointStatusRequest instantiates a new EndpointStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointStatusRequest(endpoint int32, finding int32) *EndpointStatusRequest {
	this := EndpointStatusRequest{}
	this.Endpoint = endpoint
	this.Finding = finding
	return &this
}

// NewEndpointStatusRequestWithDefaults instantiates a new EndpointStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointStatusRequestWithDefaults() *EndpointStatusRequest {
	this := EndpointStatusRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *EndpointStatusRequest) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *EndpointStatusRequest) SetDate(v string) {
	o.Date = &v
}

// GetMitigated returns the Mitigated field value if set, zero value otherwise.
func (o *EndpointStatusRequest) GetMitigated() bool {
	if o == nil || IsNil(o.Mitigated) {
		var ret bool
		return ret
	}
	return *o.Mitigated
}

// GetMitigatedOk returns a tuple with the Mitigated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetMitigatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Mitigated) {
		return nil, false
	}
	return o.Mitigated, true
}

// HasMitigated returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasMitigated() bool {
	if o != nil && !IsNil(o.Mitigated) {
		return true
	}

	return false
}

// SetMitigated gets a reference to the given bool and assigns it to the Mitigated field.
func (o *EndpointStatusRequest) SetMitigated(v bool) {
	o.Mitigated = &v
}

// GetFalsePositive returns the FalsePositive field value if set, zero value otherwise.
func (o *EndpointStatusRequest) GetFalsePositive() bool {
	if o == nil || IsNil(o.FalsePositive) {
		var ret bool
		return ret
	}
	return *o.FalsePositive
}

// GetFalsePositiveOk returns a tuple with the FalsePositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetFalsePositiveOk() (*bool, bool) {
	if o == nil || IsNil(o.FalsePositive) {
		return nil, false
	}
	return o.FalsePositive, true
}

// HasFalsePositive returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasFalsePositive() bool {
	if o != nil && !IsNil(o.FalsePositive) {
		return true
	}

	return false
}

// SetFalsePositive gets a reference to the given bool and assigns it to the FalsePositive field.
func (o *EndpointStatusRequest) SetFalsePositive(v bool) {
	o.FalsePositive = &v
}

// GetOutOfScope returns the OutOfScope field value if set, zero value otherwise.
func (o *EndpointStatusRequest) GetOutOfScope() bool {
	if o == nil || IsNil(o.OutOfScope) {
		var ret bool
		return ret
	}
	return *o.OutOfScope
}

// GetOutOfScopeOk returns a tuple with the OutOfScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetOutOfScopeOk() (*bool, bool) {
	if o == nil || IsNil(o.OutOfScope) {
		return nil, false
	}
	return o.OutOfScope, true
}

// HasOutOfScope returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasOutOfScope() bool {
	if o != nil && !IsNil(o.OutOfScope) {
		return true
	}

	return false
}

// SetOutOfScope gets a reference to the given bool and assigns it to the OutOfScope field.
func (o *EndpointStatusRequest) SetOutOfScope(v bool) {
	o.OutOfScope = &v
}

// GetRiskAccepted returns the RiskAccepted field value if set, zero value otherwise.
func (o *EndpointStatusRequest) GetRiskAccepted() bool {
	if o == nil || IsNil(o.RiskAccepted) {
		var ret bool
		return ret
	}
	return *o.RiskAccepted
}

// GetRiskAcceptedOk returns a tuple with the RiskAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetRiskAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.RiskAccepted) {
		return nil, false
	}
	return o.RiskAccepted, true
}

// HasRiskAccepted returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasRiskAccepted() bool {
	if o != nil && !IsNil(o.RiskAccepted) {
		return true
	}

	return false
}

// SetRiskAccepted gets a reference to the given bool and assigns it to the RiskAccepted field.
func (o *EndpointStatusRequest) SetRiskAccepted(v bool) {
	o.RiskAccepted = &v
}

// GetMitigatedBy returns the MitigatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointStatusRequest) GetMitigatedBy() int32 {
	if o == nil || IsNil(o.MitigatedBy.Get()) {
		var ret int32
		return ret
	}
	return *o.MitigatedBy.Get()
}

// GetMitigatedByOk returns a tuple with the MitigatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointStatusRequest) GetMitigatedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MitigatedBy.Get(), o.MitigatedBy.IsSet()
}

// HasMitigatedBy returns a boolean if a field has been set.
func (o *EndpointStatusRequest) HasMitigatedBy() bool {
	if o != nil && o.MitigatedBy.IsSet() {
		return true
	}

	return false
}

// SetMitigatedBy gets a reference to the given NullableInt32 and assigns it to the MitigatedBy field.
func (o *EndpointStatusRequest) SetMitigatedBy(v int32) {
	o.MitigatedBy.Set(&v)
}
// SetMitigatedByNil sets the value for MitigatedBy to be an explicit nil
func (o *EndpointStatusRequest) SetMitigatedByNil() {
	o.MitigatedBy.Set(nil)
}

// UnsetMitigatedBy ensures that no value is present for MitigatedBy, not even an explicit nil
func (o *EndpointStatusRequest) UnsetMitigatedBy() {
	o.MitigatedBy.Unset()
}

// GetEndpoint returns the Endpoint field value
func (o *EndpointStatusRequest) GetEndpoint() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetEndpointOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *EndpointStatusRequest) SetEndpoint(v int32) {
	o.Endpoint = v
}

// GetFinding returns the Finding field value
func (o *EndpointStatusRequest) GetFinding() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Finding
}

// GetFindingOk returns a tuple with the Finding field value
// and a boolean to check if the value has been set.
func (o *EndpointStatusRequest) GetFindingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Finding, true
}

// SetFinding sets field value
func (o *EndpointStatusRequest) SetFinding(v int32) {
	o.Finding = v
}

func (o EndpointStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Mitigated) {
		toSerialize["mitigated"] = o.Mitigated
	}
	if !IsNil(o.FalsePositive) {
		toSerialize["false_positive"] = o.FalsePositive
	}
	if !IsNil(o.OutOfScope) {
		toSerialize["out_of_scope"] = o.OutOfScope
	}
	if !IsNil(o.RiskAccepted) {
		toSerialize["risk_accepted"] = o.RiskAccepted
	}
	if o.MitigatedBy.IsSet() {
		toSerialize["mitigated_by"] = o.MitigatedBy.Get()
	}
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["finding"] = o.Finding
	return toSerialize, nil
}

func (o *EndpointStatusRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
		"finding",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointStatusRequest := _EndpointStatusRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointStatusRequest)

	if err != nil {
		return err
	}

	*o = EndpointStatusRequest(varEndpointStatusRequest)

	return err
}

type NullableEndpointStatusRequest struct {
	value *EndpointStatusRequest
	isSet bool
}

func (v NullableEndpointStatusRequest) Get() *EndpointStatusRequest {
	return v.value
}

func (v *NullableEndpointStatusRequest) Set(val *EndpointStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointStatusRequest(val *EndpointStatusRequest) *NullableEndpointStatusRequest {
	return &NullableEndpointStatusRequest{value: val, isSet: true}
}

func (v NullableEndpointStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


