/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.33.5
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
)

// checks if the PatchedDevelopmentEnvironmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedDevelopmentEnvironmentRequest{}

// PatchedDevelopmentEnvironmentRequest struct for PatchedDevelopmentEnvironmentRequest
type PatchedDevelopmentEnvironmentRequest struct {
	Name *string `json:"name,omitempty"`
}

// NewPatchedDevelopmentEnvironmentRequest instantiates a new PatchedDevelopmentEnvironmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedDevelopmentEnvironmentRequest() *PatchedDevelopmentEnvironmentRequest {
	this := PatchedDevelopmentEnvironmentRequest{}
	return &this
}

// NewPatchedDevelopmentEnvironmentRequestWithDefaults instantiates a new PatchedDevelopmentEnvironmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedDevelopmentEnvironmentRequestWithDefaults() *PatchedDevelopmentEnvironmentRequest {
	this := PatchedDevelopmentEnvironmentRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedDevelopmentEnvironmentRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedDevelopmentEnvironmentRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedDevelopmentEnvironmentRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedDevelopmentEnvironmentRequest) SetName(v string) {
	o.Name = &v
}

func (o PatchedDevelopmentEnvironmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedDevelopmentEnvironmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullablePatchedDevelopmentEnvironmentRequest struct {
	value *PatchedDevelopmentEnvironmentRequest
	isSet bool
}

func (v NullablePatchedDevelopmentEnvironmentRequest) Get() *PatchedDevelopmentEnvironmentRequest {
	return v.value
}

func (v *NullablePatchedDevelopmentEnvironmentRequest) Set(val *PatchedDevelopmentEnvironmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedDevelopmentEnvironmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedDevelopmentEnvironmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedDevelopmentEnvironmentRequest(val *PatchedDevelopmentEnvironmentRequest) *NullablePatchedDevelopmentEnvironmentRequest {
	return &NullablePatchedDevelopmentEnvironmentRequest{value: val, isSet: true}
}

func (v NullablePatchedDevelopmentEnvironmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedDevelopmentEnvironmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


