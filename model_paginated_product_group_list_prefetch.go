/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.30.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
)

// checks if the PaginatedProductGroupListPrefetch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedProductGroupListPrefetch{}

// PaginatedProductGroupListPrefetch struct for PaginatedProductGroupListPrefetch
type PaginatedProductGroupListPrefetch struct {
	Group *map[string]DojoGroup `json:"group,omitempty"`
	Product *map[string]Product `json:"product,omitempty"`
	Role *map[string]Role `json:"role,omitempty"`
}

// NewPaginatedProductGroupListPrefetch instantiates a new PaginatedProductGroupListPrefetch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedProductGroupListPrefetch() *PaginatedProductGroupListPrefetch {
	this := PaginatedProductGroupListPrefetch{}
	return &this
}

// NewPaginatedProductGroupListPrefetchWithDefaults instantiates a new PaginatedProductGroupListPrefetch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedProductGroupListPrefetchWithDefaults() *PaginatedProductGroupListPrefetch {
	this := PaginatedProductGroupListPrefetch{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PaginatedProductGroupListPrefetch) GetGroup() map[string]DojoGroup {
	if o == nil || IsNil(o.Group) {
		var ret map[string]DojoGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedProductGroupListPrefetch) GetGroupOk() (*map[string]DojoGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PaginatedProductGroupListPrefetch) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given map[string]DojoGroup and assigns it to the Group field.
func (o *PaginatedProductGroupListPrefetch) SetGroup(v map[string]DojoGroup) {
	o.Group = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *PaginatedProductGroupListPrefetch) GetProduct() map[string]Product {
	if o == nil || IsNil(o.Product) {
		var ret map[string]Product
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedProductGroupListPrefetch) GetProductOk() (*map[string]Product, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *PaginatedProductGroupListPrefetch) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given map[string]Product and assigns it to the Product field.
func (o *PaginatedProductGroupListPrefetch) SetProduct(v map[string]Product) {
	o.Product = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *PaginatedProductGroupListPrefetch) GetRole() map[string]Role {
	if o == nil || IsNil(o.Role) {
		var ret map[string]Role
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedProductGroupListPrefetch) GetRoleOk() (*map[string]Role, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *PaginatedProductGroupListPrefetch) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given map[string]Role and assigns it to the Role field.
func (o *PaginatedProductGroupListPrefetch) SetRole(v map[string]Role) {
	o.Role = &v
}

func (o PaginatedProductGroupListPrefetch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedProductGroupListPrefetch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullablePaginatedProductGroupListPrefetch struct {
	value *PaginatedProductGroupListPrefetch
	isSet bool
}

func (v NullablePaginatedProductGroupListPrefetch) Get() *PaginatedProductGroupListPrefetch {
	return v.value
}

func (v *NullablePaginatedProductGroupListPrefetch) Set(val *PaginatedProductGroupListPrefetch) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedProductGroupListPrefetch) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedProductGroupListPrefetch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedProductGroupListPrefetch(val *PaginatedProductGroupListPrefetch) *NullablePaginatedProductGroupListPrefetch {
	return &NullablePaginatedProductGroupListPrefetch{value: val, isSet: true}
}

func (v NullablePaginatedProductGroupListPrefetch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedProductGroupListPrefetch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


