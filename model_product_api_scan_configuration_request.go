/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.31.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProductAPIScanConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductAPIScanConfigurationRequest{}

// ProductAPIScanConfigurationRequest struct for ProductAPIScanConfigurationRequest
type ProductAPIScanConfigurationRequest struct {
	ServiceKey1 NullableString `json:"service_key_1,omitempty"`
	ServiceKey2 NullableString `json:"service_key_2,omitempty"`
	ServiceKey3 NullableString `json:"service_key_3,omitempty"`
	Product int32 `json:"product"`
	ToolConfiguration int32 `json:"tool_configuration"`
}

type _ProductAPIScanConfigurationRequest ProductAPIScanConfigurationRequest

// NewProductAPIScanConfigurationRequest instantiates a new ProductAPIScanConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductAPIScanConfigurationRequest(product int32, toolConfiguration int32) *ProductAPIScanConfigurationRequest {
	this := ProductAPIScanConfigurationRequest{}
	this.Product = product
	this.ToolConfiguration = toolConfiguration
	return &this
}

// NewProductAPIScanConfigurationRequestWithDefaults instantiates a new ProductAPIScanConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductAPIScanConfigurationRequestWithDefaults() *ProductAPIScanConfigurationRequest {
	this := ProductAPIScanConfigurationRequest{}
	return &this
}

// GetServiceKey1 returns the ServiceKey1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAPIScanConfigurationRequest) GetServiceKey1() string {
	if o == nil || IsNil(o.ServiceKey1.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceKey1.Get()
}

// GetServiceKey1Ok returns a tuple with the ServiceKey1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAPIScanConfigurationRequest) GetServiceKey1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceKey1.Get(), o.ServiceKey1.IsSet()
}

// HasServiceKey1 returns a boolean if a field has been set.
func (o *ProductAPIScanConfigurationRequest) HasServiceKey1() bool {
	if o != nil && o.ServiceKey1.IsSet() {
		return true
	}

	return false
}

// SetServiceKey1 gets a reference to the given NullableString and assigns it to the ServiceKey1 field.
func (o *ProductAPIScanConfigurationRequest) SetServiceKey1(v string) {
	o.ServiceKey1.Set(&v)
}
// SetServiceKey1Nil sets the value for ServiceKey1 to be an explicit nil
func (o *ProductAPIScanConfigurationRequest) SetServiceKey1Nil() {
	o.ServiceKey1.Set(nil)
}

// UnsetServiceKey1 ensures that no value is present for ServiceKey1, not even an explicit nil
func (o *ProductAPIScanConfigurationRequest) UnsetServiceKey1() {
	o.ServiceKey1.Unset()
}

// GetServiceKey2 returns the ServiceKey2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAPIScanConfigurationRequest) GetServiceKey2() string {
	if o == nil || IsNil(o.ServiceKey2.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceKey2.Get()
}

// GetServiceKey2Ok returns a tuple with the ServiceKey2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAPIScanConfigurationRequest) GetServiceKey2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceKey2.Get(), o.ServiceKey2.IsSet()
}

// HasServiceKey2 returns a boolean if a field has been set.
func (o *ProductAPIScanConfigurationRequest) HasServiceKey2() bool {
	if o != nil && o.ServiceKey2.IsSet() {
		return true
	}

	return false
}

// SetServiceKey2 gets a reference to the given NullableString and assigns it to the ServiceKey2 field.
func (o *ProductAPIScanConfigurationRequest) SetServiceKey2(v string) {
	o.ServiceKey2.Set(&v)
}
// SetServiceKey2Nil sets the value for ServiceKey2 to be an explicit nil
func (o *ProductAPIScanConfigurationRequest) SetServiceKey2Nil() {
	o.ServiceKey2.Set(nil)
}

// UnsetServiceKey2 ensures that no value is present for ServiceKey2, not even an explicit nil
func (o *ProductAPIScanConfigurationRequest) UnsetServiceKey2() {
	o.ServiceKey2.Unset()
}

// GetServiceKey3 returns the ServiceKey3 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductAPIScanConfigurationRequest) GetServiceKey3() string {
	if o == nil || IsNil(o.ServiceKey3.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceKey3.Get()
}

// GetServiceKey3Ok returns a tuple with the ServiceKey3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductAPIScanConfigurationRequest) GetServiceKey3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceKey3.Get(), o.ServiceKey3.IsSet()
}

// HasServiceKey3 returns a boolean if a field has been set.
func (o *ProductAPIScanConfigurationRequest) HasServiceKey3() bool {
	if o != nil && o.ServiceKey3.IsSet() {
		return true
	}

	return false
}

// SetServiceKey3 gets a reference to the given NullableString and assigns it to the ServiceKey3 field.
func (o *ProductAPIScanConfigurationRequest) SetServiceKey3(v string) {
	o.ServiceKey3.Set(&v)
}
// SetServiceKey3Nil sets the value for ServiceKey3 to be an explicit nil
func (o *ProductAPIScanConfigurationRequest) SetServiceKey3Nil() {
	o.ServiceKey3.Set(nil)
}

// UnsetServiceKey3 ensures that no value is present for ServiceKey3, not even an explicit nil
func (o *ProductAPIScanConfigurationRequest) UnsetServiceKey3() {
	o.ServiceKey3.Unset()
}

// GetProduct returns the Product field value
func (o *ProductAPIScanConfigurationRequest) GetProduct() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *ProductAPIScanConfigurationRequest) GetProductOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *ProductAPIScanConfigurationRequest) SetProduct(v int32) {
	o.Product = v
}

// GetToolConfiguration returns the ToolConfiguration field value
func (o *ProductAPIScanConfigurationRequest) GetToolConfiguration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToolConfiguration
}

// GetToolConfigurationOk returns a tuple with the ToolConfiguration field value
// and a boolean to check if the value has been set.
func (o *ProductAPIScanConfigurationRequest) GetToolConfigurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToolConfiguration, true
}

// SetToolConfiguration sets field value
func (o *ProductAPIScanConfigurationRequest) SetToolConfiguration(v int32) {
	o.ToolConfiguration = v
}

func (o ProductAPIScanConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductAPIScanConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceKey1.IsSet() {
		toSerialize["service_key_1"] = o.ServiceKey1.Get()
	}
	if o.ServiceKey2.IsSet() {
		toSerialize["service_key_2"] = o.ServiceKey2.Get()
	}
	if o.ServiceKey3.IsSet() {
		toSerialize["service_key_3"] = o.ServiceKey3.Get()
	}
	toSerialize["product"] = o.Product
	toSerialize["tool_configuration"] = o.ToolConfiguration
	return toSerialize, nil
}

func (o *ProductAPIScanConfigurationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"product",
		"tool_configuration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductAPIScanConfigurationRequest := _ProductAPIScanConfigurationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductAPIScanConfigurationRequest)

	if err != nil {
		return err
	}

	*o = ProductAPIScanConfigurationRequest(varProductAPIScanConfigurationRequest)

	return err
}

type NullableProductAPIScanConfigurationRequest struct {
	value *ProductAPIScanConfigurationRequest
	isSet bool
}

func (v NullableProductAPIScanConfigurationRequest) Get() *ProductAPIScanConfigurationRequest {
	return v.value
}

func (v *NullableProductAPIScanConfigurationRequest) Set(val *ProductAPIScanConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductAPIScanConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductAPIScanConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductAPIScanConfigurationRequest(val *ProductAPIScanConfigurationRequest) *NullableProductAPIScanConfigurationRequest {
	return &NullableProductAPIScanConfigurationRequest{value: val, isSet: true}
}

func (v NullableProductAPIScanConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductAPIScanConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


