/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.31.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
)

// checks if the PatchedSonarqubeIssueTransitionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedSonarqubeIssueTransitionRequest{}

// PatchedSonarqubeIssueTransitionRequest struct for PatchedSonarqubeIssueTransitionRequest
type PatchedSonarqubeIssueTransitionRequest struct {
	FindingStatus *string `json:"finding_status,omitempty"`
	SonarqubeStatus *string `json:"sonarqube_status,omitempty"`
	Transitions *string `json:"transitions,omitempty"`
	SonarqubeIssue *int32 `json:"sonarqube_issue,omitempty"`
}

// NewPatchedSonarqubeIssueTransitionRequest instantiates a new PatchedSonarqubeIssueTransitionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedSonarqubeIssueTransitionRequest() *PatchedSonarqubeIssueTransitionRequest {
	this := PatchedSonarqubeIssueTransitionRequest{}
	return &this
}

// NewPatchedSonarqubeIssueTransitionRequestWithDefaults instantiates a new PatchedSonarqubeIssueTransitionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedSonarqubeIssueTransitionRequestWithDefaults() *PatchedSonarqubeIssueTransitionRequest {
	this := PatchedSonarqubeIssueTransitionRequest{}
	return &this
}

// GetFindingStatus returns the FindingStatus field value if set, zero value otherwise.
func (o *PatchedSonarqubeIssueTransitionRequest) GetFindingStatus() string {
	if o == nil || IsNil(o.FindingStatus) {
		var ret string
		return ret
	}
	return *o.FindingStatus
}

// GetFindingStatusOk returns a tuple with the FindingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) GetFindingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FindingStatus) {
		return nil, false
	}
	return o.FindingStatus, true
}

// HasFindingStatus returns a boolean if a field has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) HasFindingStatus() bool {
	if o != nil && !IsNil(o.FindingStatus) {
		return true
	}

	return false
}

// SetFindingStatus gets a reference to the given string and assigns it to the FindingStatus field.
func (o *PatchedSonarqubeIssueTransitionRequest) SetFindingStatus(v string) {
	o.FindingStatus = &v
}

// GetSonarqubeStatus returns the SonarqubeStatus field value if set, zero value otherwise.
func (o *PatchedSonarqubeIssueTransitionRequest) GetSonarqubeStatus() string {
	if o == nil || IsNil(o.SonarqubeStatus) {
		var ret string
		return ret
	}
	return *o.SonarqubeStatus
}

// GetSonarqubeStatusOk returns a tuple with the SonarqubeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) GetSonarqubeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SonarqubeStatus) {
		return nil, false
	}
	return o.SonarqubeStatus, true
}

// HasSonarqubeStatus returns a boolean if a field has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) HasSonarqubeStatus() bool {
	if o != nil && !IsNil(o.SonarqubeStatus) {
		return true
	}

	return false
}

// SetSonarqubeStatus gets a reference to the given string and assigns it to the SonarqubeStatus field.
func (o *PatchedSonarqubeIssueTransitionRequest) SetSonarqubeStatus(v string) {
	o.SonarqubeStatus = &v
}

// GetTransitions returns the Transitions field value if set, zero value otherwise.
func (o *PatchedSonarqubeIssueTransitionRequest) GetTransitions() string {
	if o == nil || IsNil(o.Transitions) {
		var ret string
		return ret
	}
	return *o.Transitions
}

// GetTransitionsOk returns a tuple with the Transitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) GetTransitionsOk() (*string, bool) {
	if o == nil || IsNil(o.Transitions) {
		return nil, false
	}
	return o.Transitions, true
}

// HasTransitions returns a boolean if a field has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) HasTransitions() bool {
	if o != nil && !IsNil(o.Transitions) {
		return true
	}

	return false
}

// SetTransitions gets a reference to the given string and assigns it to the Transitions field.
func (o *PatchedSonarqubeIssueTransitionRequest) SetTransitions(v string) {
	o.Transitions = &v
}

// GetSonarqubeIssue returns the SonarqubeIssue field value if set, zero value otherwise.
func (o *PatchedSonarqubeIssueTransitionRequest) GetSonarqubeIssue() int32 {
	if o == nil || IsNil(o.SonarqubeIssue) {
		var ret int32
		return ret
	}
	return *o.SonarqubeIssue
}

// GetSonarqubeIssueOk returns a tuple with the SonarqubeIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) GetSonarqubeIssueOk() (*int32, bool) {
	if o == nil || IsNil(o.SonarqubeIssue) {
		return nil, false
	}
	return o.SonarqubeIssue, true
}

// HasSonarqubeIssue returns a boolean if a field has been set.
func (o *PatchedSonarqubeIssueTransitionRequest) HasSonarqubeIssue() bool {
	if o != nil && !IsNil(o.SonarqubeIssue) {
		return true
	}

	return false
}

// SetSonarqubeIssue gets a reference to the given int32 and assigns it to the SonarqubeIssue field.
func (o *PatchedSonarqubeIssueTransitionRequest) SetSonarqubeIssue(v int32) {
	o.SonarqubeIssue = &v
}

func (o PatchedSonarqubeIssueTransitionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedSonarqubeIssueTransitionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FindingStatus) {
		toSerialize["finding_status"] = o.FindingStatus
	}
	if !IsNil(o.SonarqubeStatus) {
		toSerialize["sonarqube_status"] = o.SonarqubeStatus
	}
	if !IsNil(o.Transitions) {
		toSerialize["transitions"] = o.Transitions
	}
	if !IsNil(o.SonarqubeIssue) {
		toSerialize["sonarqube_issue"] = o.SonarqubeIssue
	}
	return toSerialize, nil
}

type NullablePatchedSonarqubeIssueTransitionRequest struct {
	value *PatchedSonarqubeIssueTransitionRequest
	isSet bool
}

func (v NullablePatchedSonarqubeIssueTransitionRequest) Get() *PatchedSonarqubeIssueTransitionRequest {
	return v.value
}

func (v *NullablePatchedSonarqubeIssueTransitionRequest) Set(val *PatchedSonarqubeIssueTransitionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedSonarqubeIssueTransitionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedSonarqubeIssueTransitionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedSonarqubeIssueTransitionRequest(val *PatchedSonarqubeIssueTransitionRequest) *NullablePatchedSonarqubeIssueTransitionRequest {
	return &NullablePatchedSonarqubeIssueTransitionRequest{value: val, isSet: true}
}

func (v NullablePatchedSonarqubeIssueTransitionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedSonarqubeIssueTransitionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


