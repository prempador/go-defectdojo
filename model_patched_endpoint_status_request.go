/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.31.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
)

// checks if the PatchedEndpointStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedEndpointStatusRequest{}

// PatchedEndpointStatusRequest struct for PatchedEndpointStatusRequest
type PatchedEndpointStatusRequest struct {
	Date *string `json:"date,omitempty"`
	Mitigated *bool `json:"mitigated,omitempty"`
	FalsePositive *bool `json:"false_positive,omitempty"`
	OutOfScope *bool `json:"out_of_scope,omitempty"`
	RiskAccepted *bool `json:"risk_accepted,omitempty"`
	MitigatedBy NullableInt32 `json:"mitigated_by,omitempty"`
	Endpoint *int32 `json:"endpoint,omitempty"`
	Finding *int32 `json:"finding,omitempty"`
}

// NewPatchedEndpointStatusRequest instantiates a new PatchedEndpointStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedEndpointStatusRequest() *PatchedEndpointStatusRequest {
	this := PatchedEndpointStatusRequest{}
	return &this
}

// NewPatchedEndpointStatusRequestWithDefaults instantiates a new PatchedEndpointStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedEndpointStatusRequestWithDefaults() *PatchedEndpointStatusRequest {
	this := PatchedEndpointStatusRequest{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *PatchedEndpointStatusRequest) SetDate(v string) {
	o.Date = &v
}

// GetMitigated returns the Mitigated field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetMitigated() bool {
	if o == nil || IsNil(o.Mitigated) {
		var ret bool
		return ret
	}
	return *o.Mitigated
}

// GetMitigatedOk returns a tuple with the Mitigated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetMitigatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Mitigated) {
		return nil, false
	}
	return o.Mitigated, true
}

// HasMitigated returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasMitigated() bool {
	if o != nil && !IsNil(o.Mitigated) {
		return true
	}

	return false
}

// SetMitigated gets a reference to the given bool and assigns it to the Mitigated field.
func (o *PatchedEndpointStatusRequest) SetMitigated(v bool) {
	o.Mitigated = &v
}

// GetFalsePositive returns the FalsePositive field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetFalsePositive() bool {
	if o == nil || IsNil(o.FalsePositive) {
		var ret bool
		return ret
	}
	return *o.FalsePositive
}

// GetFalsePositiveOk returns a tuple with the FalsePositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetFalsePositiveOk() (*bool, bool) {
	if o == nil || IsNil(o.FalsePositive) {
		return nil, false
	}
	return o.FalsePositive, true
}

// HasFalsePositive returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasFalsePositive() bool {
	if o != nil && !IsNil(o.FalsePositive) {
		return true
	}

	return false
}

// SetFalsePositive gets a reference to the given bool and assigns it to the FalsePositive field.
func (o *PatchedEndpointStatusRequest) SetFalsePositive(v bool) {
	o.FalsePositive = &v
}

// GetOutOfScope returns the OutOfScope field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetOutOfScope() bool {
	if o == nil || IsNil(o.OutOfScope) {
		var ret bool
		return ret
	}
	return *o.OutOfScope
}

// GetOutOfScopeOk returns a tuple with the OutOfScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetOutOfScopeOk() (*bool, bool) {
	if o == nil || IsNil(o.OutOfScope) {
		return nil, false
	}
	return o.OutOfScope, true
}

// HasOutOfScope returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasOutOfScope() bool {
	if o != nil && !IsNil(o.OutOfScope) {
		return true
	}

	return false
}

// SetOutOfScope gets a reference to the given bool and assigns it to the OutOfScope field.
func (o *PatchedEndpointStatusRequest) SetOutOfScope(v bool) {
	o.OutOfScope = &v
}

// GetRiskAccepted returns the RiskAccepted field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetRiskAccepted() bool {
	if o == nil || IsNil(o.RiskAccepted) {
		var ret bool
		return ret
	}
	return *o.RiskAccepted
}

// GetRiskAcceptedOk returns a tuple with the RiskAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetRiskAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.RiskAccepted) {
		return nil, false
	}
	return o.RiskAccepted, true
}

// HasRiskAccepted returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasRiskAccepted() bool {
	if o != nil && !IsNil(o.RiskAccepted) {
		return true
	}

	return false
}

// SetRiskAccepted gets a reference to the given bool and assigns it to the RiskAccepted field.
func (o *PatchedEndpointStatusRequest) SetRiskAccepted(v bool) {
	o.RiskAccepted = &v
}

// GetMitigatedBy returns the MitigatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedEndpointStatusRequest) GetMitigatedBy() int32 {
	if o == nil || IsNil(o.MitigatedBy.Get()) {
		var ret int32
		return ret
	}
	return *o.MitigatedBy.Get()
}

// GetMitigatedByOk returns a tuple with the MitigatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedEndpointStatusRequest) GetMitigatedByOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MitigatedBy.Get(), o.MitigatedBy.IsSet()
}

// HasMitigatedBy returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasMitigatedBy() bool {
	if o != nil && o.MitigatedBy.IsSet() {
		return true
	}

	return false
}

// SetMitigatedBy gets a reference to the given NullableInt32 and assigns it to the MitigatedBy field.
func (o *PatchedEndpointStatusRequest) SetMitigatedBy(v int32) {
	o.MitigatedBy.Set(&v)
}
// SetMitigatedByNil sets the value for MitigatedBy to be an explicit nil
func (o *PatchedEndpointStatusRequest) SetMitigatedByNil() {
	o.MitigatedBy.Set(nil)
}

// UnsetMitigatedBy ensures that no value is present for MitigatedBy, not even an explicit nil
func (o *PatchedEndpointStatusRequest) UnsetMitigatedBy() {
	o.MitigatedBy.Unset()
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetEndpoint() int32 {
	if o == nil || IsNil(o.Endpoint) {
		var ret int32
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetEndpointOk() (*int32, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given int32 and assigns it to the Endpoint field.
func (o *PatchedEndpointStatusRequest) SetEndpoint(v int32) {
	o.Endpoint = &v
}

// GetFinding returns the Finding field value if set, zero value otherwise.
func (o *PatchedEndpointStatusRequest) GetFinding() int32 {
	if o == nil || IsNil(o.Finding) {
		var ret int32
		return ret
	}
	return *o.Finding
}

// GetFindingOk returns a tuple with the Finding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedEndpointStatusRequest) GetFindingOk() (*int32, bool) {
	if o == nil || IsNil(o.Finding) {
		return nil, false
	}
	return o.Finding, true
}

// HasFinding returns a boolean if a field has been set.
func (o *PatchedEndpointStatusRequest) HasFinding() bool {
	if o != nil && !IsNil(o.Finding) {
		return true
	}

	return false
}

// SetFinding gets a reference to the given int32 and assigns it to the Finding field.
func (o *PatchedEndpointStatusRequest) SetFinding(v int32) {
	o.Finding = &v
}

func (o PatchedEndpointStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedEndpointStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Mitigated) {
		toSerialize["mitigated"] = o.Mitigated
	}
	if !IsNil(o.FalsePositive) {
		toSerialize["false_positive"] = o.FalsePositive
	}
	if !IsNil(o.OutOfScope) {
		toSerialize["out_of_scope"] = o.OutOfScope
	}
	if !IsNil(o.RiskAccepted) {
		toSerialize["risk_accepted"] = o.RiskAccepted
	}
	if o.MitigatedBy.IsSet() {
		toSerialize["mitigated_by"] = o.MitigatedBy.Get()
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Finding) {
		toSerialize["finding"] = o.Finding
	}
	return toSerialize, nil
}

type NullablePatchedEndpointStatusRequest struct {
	value *PatchedEndpointStatusRequest
	isSet bool
}

func (v NullablePatchedEndpointStatusRequest) Get() *PatchedEndpointStatusRequest {
	return v.value
}

func (v *NullablePatchedEndpointStatusRequest) Set(val *PatchedEndpointStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedEndpointStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedEndpointStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedEndpointStatusRequest(val *PatchedEndpointStatusRequest) *NullablePatchedEndpointStatusRequest {
	return &NullablePatchedEndpointStatusRequest{value: val, isSet: true}
}

func (v NullablePatchedEndpointStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedEndpointStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


