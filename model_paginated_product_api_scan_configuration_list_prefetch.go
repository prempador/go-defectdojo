/*
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

API version: 2.38.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package defectdojo

import (
	"encoding/json"
)

// checks if the PaginatedProductAPIScanConfigurationListPrefetch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedProductAPIScanConfigurationListPrefetch{}

// PaginatedProductAPIScanConfigurationListPrefetch struct for PaginatedProductAPIScanConfigurationListPrefetch
type PaginatedProductAPIScanConfigurationListPrefetch struct {
	Product *map[string]Product `json:"product,omitempty"`
	ToolConfiguration *map[string]ToolConfiguration `json:"tool_configuration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaginatedProductAPIScanConfigurationListPrefetch PaginatedProductAPIScanConfigurationListPrefetch

// NewPaginatedProductAPIScanConfigurationListPrefetch instantiates a new PaginatedProductAPIScanConfigurationListPrefetch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedProductAPIScanConfigurationListPrefetch() *PaginatedProductAPIScanConfigurationListPrefetch {
	this := PaginatedProductAPIScanConfigurationListPrefetch{}
	return &this
}

// NewPaginatedProductAPIScanConfigurationListPrefetchWithDefaults instantiates a new PaginatedProductAPIScanConfigurationListPrefetch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedProductAPIScanConfigurationListPrefetchWithDefaults() *PaginatedProductAPIScanConfigurationListPrefetch {
	this := PaginatedProductAPIScanConfigurationListPrefetch{}
	return &this
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) GetProduct() map[string]Product {
	if o == nil || IsNil(o.Product) {
		var ret map[string]Product
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) GetProductOk() (*map[string]Product, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given map[string]Product and assigns it to the Product field.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) SetProduct(v map[string]Product) {
	o.Product = &v
}

// GetToolConfiguration returns the ToolConfiguration field value if set, zero value otherwise.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) GetToolConfiguration() map[string]ToolConfiguration {
	if o == nil || IsNil(o.ToolConfiguration) {
		var ret map[string]ToolConfiguration
		return ret
	}
	return *o.ToolConfiguration
}

// GetToolConfigurationOk returns a tuple with the ToolConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) GetToolConfigurationOk() (*map[string]ToolConfiguration, bool) {
	if o == nil || IsNil(o.ToolConfiguration) {
		return nil, false
	}
	return o.ToolConfiguration, true
}

// HasToolConfiguration returns a boolean if a field has been set.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) HasToolConfiguration() bool {
	if o != nil && !IsNil(o.ToolConfiguration) {
		return true
	}

	return false
}

// SetToolConfiguration gets a reference to the given map[string]ToolConfiguration and assigns it to the ToolConfiguration field.
func (o *PaginatedProductAPIScanConfigurationListPrefetch) SetToolConfiguration(v map[string]ToolConfiguration) {
	o.ToolConfiguration = &v
}

func (o PaginatedProductAPIScanConfigurationListPrefetch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedProductAPIScanConfigurationListPrefetch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ToolConfiguration) {
		toSerialize["tool_configuration"] = o.ToolConfiguration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaginatedProductAPIScanConfigurationListPrefetch) UnmarshalJSON(data []byte) (err error) {
	varPaginatedProductAPIScanConfigurationListPrefetch := _PaginatedProductAPIScanConfigurationListPrefetch{}

	err = json.Unmarshal(data, &varPaginatedProductAPIScanConfigurationListPrefetch)

	if err != nil {
		return err
	}

	*o = PaginatedProductAPIScanConfigurationListPrefetch(varPaginatedProductAPIScanConfigurationListPrefetch)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "product")
		delete(additionalProperties, "tool_configuration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaginatedProductAPIScanConfigurationListPrefetch struct {
	value *PaginatedProductAPIScanConfigurationListPrefetch
	isSet bool
}

func (v NullablePaginatedProductAPIScanConfigurationListPrefetch) Get() *PaginatedProductAPIScanConfigurationListPrefetch {
	return v.value
}

func (v *NullablePaginatedProductAPIScanConfigurationListPrefetch) Set(val *PaginatedProductAPIScanConfigurationListPrefetch) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedProductAPIScanConfigurationListPrefetch) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedProductAPIScanConfigurationListPrefetch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedProductAPIScanConfigurationListPrefetch(val *PaginatedProductAPIScanConfigurationListPrefetch) *NullablePaginatedProductAPIScanConfigurationListPrefetch {
	return &NullablePaginatedProductAPIScanConfigurationListPrefetch{value: val, isSet: true}
}

func (v NullablePaginatedProductAPIScanConfigurationListPrefetch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedProductAPIScanConfigurationListPrefetch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


